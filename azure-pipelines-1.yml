# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '98aee90d-59c1-4b88-8ebe-e68c2d92fd0f'
  imageRepository: 'whitespacemxgsspringbootdocker'
  containerRegistry: 'demojava.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'demojava2eca-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

- stage: Build 
  displayName: Build stage
  jobs:  
  - job: Build 
    displayName: Build and Push Container Images
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureKeyVault@1
      displayName: Fetch secrets from Azure Key vault
      inputs:
        azureSubscription: 'Java Demos 2'
        KeyVaultName: 'piggymetrics'
        SecretsFilter: '*'

    - task: Bash@3
      displayName: Build container images for each service
      inputs:
        targetType: 'inline'
        script: |
          export CONTAINER_REGISTRY=$(CONTAINER_REGISTRY)
          export IMAGE_TAG=$(IMAGE_TAG)
          echo 'Install ACR  credential helper and login'
          curl -L https://aka.ms/acr/installaad/bash | /bin/bash
          az acr login -n $(CONTAINER_REGISTRY)
          docker login -u $(AZURE-REGISTRY-USERNAME) -p $(AZURE-REGISTRY-PASSWORD) $(CONTAINER_REGISTRY).azurecr.io
          echo 'Start Build'
          cd config
          mvn compile jib:build \
              -Djib.container.environment=CONFIG_SERVICE_PASSWORD=$(CONFIG-SERVICE-PASSWORD) 
          echo 'Build complete'
    - publish: kubernetes
      artifact: kubernetes

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    environment: 'Piggymetrics.piggymetrics-azp'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@1
            displayName: Fetch secrets from Azure Key vault
            inputs:
              azureSubscription: 'Java Demos 2'
              KeyVaultName: 'piggymetrics'
              SecretsFilter: '*'
          
          - task: replacetokens@3
            displayName: Replace CONTAINER_REGISTRY & IMAGE_TAG in all the manifest files
            inputs:
              targetFiles: '$(Pipeline.Workspace)/kubernetes/*.yaml'
              tokenPrefix: '${'
              tokenSuffix: '}'

          - task: KubernetesManifest@0
            displayName: Create generic secrets to be available on pods
            inputs:
              action: 'createSecret'
              secretType: 'generic'
              secretName: 'piggymetrics'
              secretArguments: '--from-literal=config_service_password=$(CONFIG-SERVICE-PASSWORD) --from-literal=notification_service_password=$(NOTIFICATION-SERVICE-PASSWORD) --from-literal=statistics_service_password=$(STATISTICS-SERVICE-PASSWORD) --from-literal=account_service_password=$(ACCOUNT-SERVICE-PASSWORD) --from-literal=rabbitmq_password=$(RABBITMQ-PASSWORD) --from-literal=mongodb_uri=$(MONGODB-URI)  --from-literal=mongodb_database=$(MONGODB-DATABASE) --from-literal=rabbitmq_username=$(RABBITMQ-USERNAME) --from-literal=rabbitmq_host=$(RABBITMQ-HOST) --from-literal=rabbitmq_port=$(RABBITMQ-PORT)  --from-literal=notification_email_user=$(SMTP-USER) --from-literal=notification_email_pass=$(SMTP-PASSWORD) --from-literal=notification_email_host=$(NOTIFICATION-EMAIL-HOST) --from-literal=notification_email_port=$(NOTIFICATION-EMAIL-PORT)'


          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kubernetes/1-config.yaml
                $(Pipeline.Workspace)/kubernetes/2-registry.yaml
                $(Pipeline.Workspace)/kubernetes/3-gateway.yaml
                $(Pipeline.Workspace)/kubernetes/4-auth-service.yaml
                $(Pipeline.Workspace)/kubernetes/5-account-service.yaml
                $(Pipeline.Workspace)/kubernetes/6-statistics-service.yaml
                $(Pipeline.Workspace)/kubernetes/7-notification-service.yaml
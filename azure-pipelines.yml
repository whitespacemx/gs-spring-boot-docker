trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'dea8905c-8a2c-4b1e-ba68-f276e492c158'
  imageRepository: 'whitespacemxgsspringbootdocker'
  containerRegistry: 'demojava.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'complete/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: true
        spotBugsRunAnalysis: true
        goals: 'package'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'aks-demo'
        namespace: 'demo'
        manifests: 'manifest/*'
        containers: demojava.azurecr.io/whitespacemxgsspringbootdocker:$(tag)
          #containers: $(containerRegistry)/$(imageRepository):$(tag)  